!function(n){"use strict";var c,a,r={},u={},d=0;function t(n){var t=u[n];void 0!==t&&(delete u[n],window.clearInterval(t))}function e(n){var t,e,o=n.connection,i=o.creationTime,s=o.connectionId;i<c?d++:a.isMyself(o)||((t=function(n){var t;d<=0&&(t=n,a.sendSignal("status",r,t))})(o),e=window.setInterval(t.bind(void 0,o),6e4),u[s]=e)}var o={"signal:status":function(n){r=JSON.parse(n.data),(this||a).sendSignal("statusACK"),this.removeListener("signal:status"),Utils.sendEvent("roomStatus:updatedRemotely")},"signal:statusACK":function(n){t(n.from.connectionId)},connectionCreated:function(n){n.connection.data&&e(n)},sessionConnected:function(n){c=n.target.connection.creationTime,a=this,Request.saveConnection(c,a.session.id)},connectionDestroyed:function(n){n.connection.creationTime<c&&d--,t(n.connection.connectionId)},sessionDisconnected:function(n){Request.deleteConnection(c,a.session.id).then(function(){window.location="/"})}};n.RoomStatus={set:function(n,t){"object"==typeof t&&(r[n]=t)},get:function(n){return r[n]},init:function(n,t){return r=t||{},e=n,Array.isArray(e)||(e=[e]),e.push(o),e;var e}}}(this);