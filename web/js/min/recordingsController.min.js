(e=>{let t=null;const n={delete(e){const t=".archive-delete-modal";return Modal.show(t,(function(){document.querySelector(t+" .username").textContent=e.username})).then(()=>new Promise(()=>{const n=document.querySelector(t);n.addEventListener("click",(function i(r){const s=r.target.classList;if(r.stopImmediatePropagation(),r.preventDefault(),s.contains("delete-archive")&&function(e){const t=e.status;e.status="deleting",Request.deleteArchive(e.id).then(()=>{Utils.sendEvent("RecordingsController:deleteArchive",{id:e.id})}).catch(()=>{e.status=t})}(e),s.contains("btn"))return n.removeEventListener("click",i),Modal.hide(t)}))}))}};var i=()=>{e.addEventListener("archive",e=>{const t=n[e.detail.action];t&&t(e.detail)})};e.RecordingsController={init:function(n){let r;return r=n?LazyLoader.dependencyLoad(["/js/models/firebase.js","/js/min/recordingsView.min.js"]).then(()=>FirebaseModel.init()):Promise.resolve(),r.then(n=>{t=n,Utils.sendEvent("recordings-model-ready",null,e),i(),n&&RecordingsView.init(t)})},get model(){return t}}})(this);