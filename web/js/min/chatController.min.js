!function(t){"use strict";var o,r,s,n,a=new Utils.MultiLevelLogger("chatController.js",Utils.MultiLevelLogger.DEFAULT_LEVELS.all),i="chat";function c(){if(o){var e=RoomStatus.get(i);if(e)for(var t=0,n=(s=e).length;t<n;t++)Utils.sendEvent("chatController:incomingMessage",{data:s[t]});else s=[],RoomStatus.set(i,s)}}var l={"signal:chat":function(e){var t=JSON.parse(e.data);t.senderId=e.from.connectionId,s.push(t),Utils.sendEvent("chatController:incomingMessage",{data:t})},connectionCreated:function(e){var t=JSON.parse(e.connection.data).userName;this.isMyself(e.connection)?n=this:Utils.sendEvent("chatController:presenceEvent",{userName:t,text:"has joined the call"})},connectionDestroyed:function(e){Utils.sendEvent("chatController:presenceEvent",{userName:JSON.parse(e.connection.data).userName,text:"has left the call"})}};function d(e){var t=e.detail;return n.sendSignal("chat",t).then(function(){Utils.sendEvent("chatController:messageDelivered")}).catch(function(e){a.error("Error sending [",t.text.value,"] to the group. ",e.message)})}t.ChatController={init:function(e,n,a){return LazyLoader.dependencyLoad(["/js/chatView.js"]).then(function(){return r={updatedRemotely:{name:"roomStatus:updatedRemotely",handler:c,couldBeChanged:!0},outgoingMessage:{name:"chatView:outgoingMessage",handler:d}},s=[],o=void 0!==t.RoomStatus,ChatView.init(e,a).then(function(){var e,t;return o&&RoomStatus.set(i,s),e=a,Array.isArray(e)&&e.forEach(function(e){var t=r[e.type];t&&t.couldBeChanged&&(t.name=e.name)}),Utils.addHandlers(r),t=n,Array.isArray(t)||(t=[t]),t.push(l),t})})}}}(this);